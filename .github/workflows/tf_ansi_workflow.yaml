name: 'CI-CD by Terraform-Ansible-GHA'
on:
  push:
    branches:
    - master
  pull_request:
  workflow_dispatch:
    inputs:
      ENVIRONMENT_NAME:
        description: 'Environment Name'
        required: true
        type: string
        default: "DEV"      
      RELEASE_BRANCH:
        description: 'Select the serivce release branch to checkout the code repo'
        required: true
        type: string
        default: "main"
jobs:
  provision-resources-byterraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest.
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
    
    - name: Debug Credentials2
      run: echo ${{ secrets.GCP_KEY1 }}
      
    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: |
        cd terraform
        terraform init
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GCP_KEY1 }}

    # Checks that all Terraform configuration files adhere to a canonical format
    #- name: Terraform Format
     # run: terraform fmt -check

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: |
        cd terraform
        terraform plan
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GCP_KEY1 }}

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        cd terraform
        terraform apply -auto-approve
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GCP_KEY1 }}
  cfm-byansible:
    name: 'Ansible'
    runs-on: ubuntu-latest
    needs: provision-resources-byterraform  # Make sure Ansible runs after Terraform

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Check if Ansible is installed
      id: ansible_check
      run: ansible --version || echo "Ansible not found"
      continue-on-error: true

    - name: Install Ansible
      if: steps.ansible_check.outcome == 'failure'
      run: |
        sudo apt-get update
        sudo apt-get install -y ansible    
      
    - name: ping VM
      run: |
        cd ansible
        chmod 600 ./id_ed25519
        ansible -m ping -vvv all
      env:        
        #ANSIBLE_HOST_KEY_CHECKING: False  # Disable host key checking for simplicity
        ANSIBLE_CONFIG: ./ansible.cfg      
        # ANSIBLE_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        # ANSIBLE_SSH_USER: ${{ secrets.YOUR_SSH_USERNAME }}

    - name: Run Ansible Playbook
      run: |
        cd ansible  
        ansible-playbook install_apache.yml    
   
